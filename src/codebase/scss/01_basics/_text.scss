// BASICS: TYPOGRAPHY
// ~~~~~~~~~~~~~~~~~~

// See also `.t-` utilities.

@use "../00_setup/default-variables" as *;
@use "sass:math";

h1, .h1,
h2, .h2,
h3, .h3 {
  line-height: 1.3; // Fallback
}

h4, .h4,
h5, .h5,
h6, .h6 {
  line-height: 1.5; // Fallback
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  margin-top: 0;
  margin-bottom: $text-base-line-height * 1rem;
  font-weight: $heading-weight;
  line-height: $heading-line-height;
}

h1, .h1 {
  font-size: map-get($heading-size, h1) * 1rem;
}

h2, .h2 {
  font-size: map-get($heading-size, h2) * 1rem;
}

h3, .h3 {
  font-size: map-get($heading-size, h3) * 1rem;
}

h4, .h4 {
  font-size: map-get($heading-size, h4) * 1rem;
}

h5, .h5 {
  font-size: map-get($heading-size, h5) * 1rem;
}

h6, .h6 {
  font-size: map-get($heading-size, h6) * 1rem;
}

@include break-max(w-sm) {
  h1, .h1 {
    font-size: map-get($heading-size, h1) * .875rem;
  }
  h2, .h2 {
    font-size: map-get($heading-size, h2) * .875rem;
  }
  h3, .h3 {
    font-size: map-get($heading-size, h3) * .875rem;
  }
  h4, .h4 {
    font-size: map-get($heading-size, h4) * .875rem;
  }
  h5, .h5 {
    font-size: map-get($heading-size, h5) * .875rem;
  }
  h6, .h6 {
    font-size: map-get($heading-size, h6) * .875rem;
  }
}

// p, li, dd, th, td, blockquote,
// h1, .h1,
// h2, .h2,
// h3, .h3,
// h4, .h4,
// h5, .h5,
// h6, .h6 {
//   overflow-wrap: break-word;
//   hyphens: auto;
// }

p,
blockquote,
dl {
  margin-top: 0;
  margin-bottom: $text-base-line-height * 1rem;
}

ol,
ul {
  margin-top: 0;
  margin-bottom: $text-base-line-height * 1rem;
  padding-left: $text-base-line-height * 1rem;
}

ol ol, ul ul, ol ul, ul ol {
  margin-bottom: 0;
}

// li {
//   margin-bottom: $li-spacing;
// }

// li > ol,
// li > ul {
//   margin-top: 0.75em;
// }

td ol:last-of-type,
td ul:last-of-type,
td p:last-of-type {
  margin-bottom: 0;
}

dd {
  margin-bottom: $text-base-line-height * 1rem;
}

dt {
  font-weight: $text-bold-font-weight;
}

dd {
  margin-left: 2em;
}

details {
  margin-bottom: $text-base-line-height * 1rem;
}

summary {
  font-weight: $text-bold-font-weight;
}

summary:hover {
  cursor: pointer;
}

hr {
  height: 0;
  width: 100%;
  margin-top: $horizontal-rule-spacing;
  margin-bottom: $horizontal-rule-spacing;
  border: 0;
  border-top: $horizontal-rule-thickness, solid map-get($theme-color, detail);
}

blockquote {
  margin: ($text-base-line-height * 1rem) 0;
  padding-right: 1.5rem;
  padding-left: 1.5rem;
  padding-right: $blockquotes-side-padding;
  padding-left: $blockquotes-side-padding;
  font-size: $blockquotes-font-size;
}

.t-link-inside {
  cursor: pointer;
  text-decoration: none;
}

.t-link-inside:hover .t-link {
  color: inherit;
}

.t-link {
  &:-moz-focusring {
    outline: $focus-ring-outline;
    box-shadow: $focus-ring-shadow;
  }
  &:focus-visible {
    outline: $focus-ring-outline;
    box-shadow: $focus-ring-shadow;
  }
}

.t-link,
a {
  text-decoration: $link-decoration;
  text-decoration-skip-ink: auto;
  color: map-get($theme-color, link);
  cursor: pointer;
  transition: all 0.15s ease-in-out;
  &:hover,
  &:active {
    color: map-get($theme-color, link-hover);
  }
  @if $link-color-visited==true {
    &:visited {
      color: map-get($theme-color, link-visited);
    }
  }
}

table {
  border-collapse: separate;
  border-spacing: 0;
}

pre {
  max-width: calc(100vw - 2rem);
  margin-bottom: $text-base-line-height * 1rem;
  font-family: $font-stack-base;
  & > code {
    display: block;
    overflow-x: auto;
  }
}

code,
kbd,
samp {
  display: inline-block;
  font-family: $font-stack-mono;
  color: map-get($theme-color, code);
  font-size: 0.9em;
  line-height: 1.5em;
  padding: 0.1em 0.4em;
  @if $code-rounded-corners==true {
    border-radius: $code-radius;
  }
  @if $code-background-color==true {
    background-color: map-get($theme-color, page-bg-alt);  
  }
}