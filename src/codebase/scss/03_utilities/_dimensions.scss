// UTILITIES: DIMENSIONS
// ~~~~~~~~~~~~~~~~~~~~~

@use "../00_setup/default-variables" as *;
@use "sass:math";

.w {
  &-xxs {
    width: min(100%, var(--w-xxs));
  }

  &-xs {
    width: min(100%, var(--w-xs));
  }

  &-sm {
    width: min(100%, var(--w-sm));
  }

  &-md {
    width: min(100%, var(--w-md));
  }

  &-lg {
    width: min(100%, var(--w-lg));
  }

  &-xl {
    width: min(100%, var(--w-xl));
  }

  &-xxl {
    width: min(100%, var(--w-xxl));
  }

  &-max-100vw {
    width: 100%;
    max-width: 100vw;
  }

  &-25\% {
    width: 25%;
  }

  &-50\% {
    width: 50%;
  }

  &-75\% {
    width: 75%;
  }

  &-100\% {
    width: 100%;
  }

  &-auto {
    max-width: unset;
    width: auto !important;
  }
}

@each $mq-key,
$mq-value in $mq-width {
  @include break-min(#{$mq-value}) {
    .#{$mq-key}\:w-auto {
      max-width: unset;
      width: auto !important;
    }
  }
}

.h-50vh {
  min-height: 50vh;
}

.h-100vh {
  min-height: 100vh;
}

.h-max-100vh {
  max-height: 100vh;
}

.h-100\% {
  height: 100%;
}

.h-max-100\% {
  max-height: 100%;
}

// Squares

.square {
  min-width: var(--sq);
  width: var(--sq);
  min-height: var(--sq);
  height: var(--sq);

  &-sm {
    min-width: var(--sq-sm);
    width: var(--sq-sm);
    min-height: var(--sq-sm);
    height: var(--sq-sm);
  }

  &-md {
    min-width: var(--sq);
    width: var(--sq);
    min-height: var(--sq);
    height: var(--sq);
  }

  &-lg {
    min-width: var(--sq-lg);
    width: var(--sq-lg);
    min-height: var(--sq-lg);
    height: var(--sq-lg);
  }
}

@each $mq-key,
$mq-value in $mq-width {
  @include break-min(#{$mq-value}) {
    .#{$mq-key}\:square {
      min-width: var(--sq);
      width: var(--sq);
      min-height: var(--sq);
      height: var(--sq);

      &-sm {
        min-width: var(--sq-sm);
        width: var(--sq-sm);
        min-height: var(--sq-sm);
        height: var(--sq-sm);
      }

      &-md {
        min-width: var(--sq);
        width: var(--sq);
        min-height: var(--sq);
        height: var(--sq);
      }

      &-lg {
        min-width: var(--sq-lg);
        width: var(--sq-lg);
        min-height: var(--sq-lg);
        height: var(--sq-lg);
      }
    }
  }
}

// Box stretching (requires a `.relative` wrapper)

.box {
  position: absolute;
  inset: 0;

  &.fixed {
    position: fixed;
  }
}